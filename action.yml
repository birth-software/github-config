name: "Birth Github Config"
description: "Action to config Birth projects on Github"
author: "Birth Software"

outputs:
  BIRTH_GITHUB_TARGETS:
    description: "Array of Birth targets"
    value: ${{ steps.generate_config.outputs.BIRTH_GITHUB_TARGETS }}
  BIRTH_BUILD_TYPES:
    description: "Array of Birth build types"
    value: ${{ steps.generate_config.outputs.BIRTH_BUILD_TYPES }}
  BIRTH_CMAKE_BUILD_TYPES:
    description: "Array of Birth CMake build types"
    value: ${{ steps.generate_config.outputs.BIRTH_CMAKE_BUILD_TYPES }}
  BIRTH_ZIG_BUILD_TYPES:
    description: "Array of Birth Zig build types"
    value: ${{ steps.generate_config.outputs.BIRTH_ZIG_BUILD_TYPES }}
  BIRTH_LINKAGE_MODES:
    description: "Array of Birth linkage modes"
    value: ${{ steps.generate_config.outputs.BIRTH_LINKAGE_MODES }}
  BIRTH_COMPILERS:
    description: "Array of Birth compilers"
    value: ${{ steps.generate_config.outputs.BIRTH_COMPILERS }}
  BIRTH_LINUX_X86_64:
    description: "Birth Linux image (x86_64)"
    value: ${{ steps.generate_config.outputs.BIRTH_LINUX_X86_64 }}
  BIRTH_LINUX_AARCH64:
    description: "Birth Linux image (aarch64)"
    value: ${{ steps.generate_config.outputs.BIRTH_LINUX_AARCH64 }}
  BIRTH_MACOS_AARCH64:
    description: "Birth MacOS image (aarch64)"
    value: ${{ steps.generate_config.outputs.BIRTH_MACOS_AARCH64 }}
  BIRTH_WINDOWS_X86_64:
    description: "Birth Windows image (x86_64)"
    value: ${{ steps.generate_config.outputs.BIRTH_WINDOWS_X86_64 }}

runs:
  using: "composite"
  steps:
    - id: generate_config
      shell: bash
      run: |
        echo '["cl", "gcc", "clang", "tcc"]' > birth_compilers.json
        BIRTH_COMPILERS=$(cat birth_compilers.json)
        echo "BIRTH_COMPILERS=$BIRTH_COMPILERS" >> $GITHUB_OUTPUT

        echo '["${{env.BIRTH_LINUX_X86_64}}", "${{env.BIRTH_LINUX_AARCH64}}", "${{env.BIRTH_MACOS_AARCH64}}", "${{env.BIRTH_MACOS_X86_64}}", "${{env.BIRTH_WINDOWS_X86_64}}"]' > os_list.json
        BIRTH_GITHUB_TARGETS=$(cat os_list.json)
        echo "BIRTH_GITHUB_TARGETS=$BIRTH_GITHUB_TARGETS" >> $GITHUB_OUTPUT

        echo '["MinSizeRel", "Release", "RelWithDebInfo", "Debug"]' > cmake_build_types.json
        BIRTH_CMAKE_BUILD_TYPES=$(cat cmake_build_types.json)
        echo "BIRTH_CMAKE_BUILD_TYPES=$BIRTH_CMAKE_BUILD_TYPES" >> $GITHUB_OUTPUT

        echo '["Debug", "ReleaseSafe", "ReleaseSmall", "ReleaseFast"]' > zig_build_types.json
        BIRTH_ZIG_BUILD_TYPES=$(cat zig_build_types.json)
        echo "BIRTH_ZIG_BUILD_TYPES=$BIRTH_ZIG_BUILD_TYPES" >> $GITHUB_OUTPUT

        echo '["debug", "release_safe", "release_fast", "release_small" ]' > birth_build_types.json
        BIRTH_BUILD_TYPES=$(cat birth_build_types.json)
        echo "BIRTH_BUILD_TYPES=$BIRTH_BUILD_TYPES" >> $GITHUB_OUTPUT

        echo '["static", "dynamic" ]' > birth_linkage_modes.json
        BIRTH_LINKAGE_MODES=$(cat birth_linkage_modes.json)
        echo "BIRTH_LINKAGE_MODES=$BIRTH_LINKAGE_MODES" >> $GITHUB_OUTPUT

        echo "BIRTH_LINUX_X86_64=$BIRTH_LINUX_X86_64" >> $GITHUB_OUTPUT
        echo "BIRTH_LINUX_AARCH64=$BIRTH_LINUX_AARCH64" >> $GITHUB_OUTPUT
        echo "BIRTH_MACOS_AARCH64=$BIRTH_MACOS_AARCH64" >> $GITHUB_OUTPUT
        echo "BIRTH_WINDOWS_X86_64=$BIRTH_WINDOWS_X86_64" >> $GITHUB_OUTPUT
      env:
        BIRTH_LINUX_X86_64: ubuntu-24.04
        BIRTH_LINUX_AARCH64: ubuntu-24.04-arm
        BIRTH_MACOS_X86_64: macos-13
        BIRTH_MACOS_AARCH64: macos-15
        BIRTH_WINDOWS_X86_64: windows-2025
